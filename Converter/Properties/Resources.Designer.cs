//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Daisy.DaisyConverter.Word.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Daisy.DaisyConverter.Word.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///        xmlns:w=&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;
        ///        xmlns:pic=&quot;http://schemas.openxmlformats.org/drawingml/2006/picture&quot;
        ///        xmlns:wp=&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;
        ///        xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:cp=&quot;http://schemas.openxmlformat [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        /// xmlns:w=&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;
        /// xmlns:pic=&quot;http://schemas.openxmlformats.org/drawingml/2006/picture&quot;
        /// xmlns:wp=&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;
        /// xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metadata/ [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string Common2 {
            get {
                return ResourceManager.GetString("Common2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        /// xmlns:w=&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;
        /// xmlns:pic=&quot;http://schemas.openxmlformats.org/drawingml/2006/picture&quot;
        /// xmlns:wp=&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;
        /// xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metadata/ [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string Common3 {
            get {
                return ResourceManager.GetString("Common3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot; ?&gt;
        ///  &lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:mml=&quot;http://www.w3.org/1998/Math/MathML&quot;
        ///    xmlns:m=&quot;http://schemas.openxmlformats.org/officeDocument/2006/math&quot; xmlns:dtbook=&quot;http://www.daisy.org/z3986/2005/dtbook/&quot; exclude-result-prefixes=&quot;m mml dtbook&quot;&gt;
        ///    &lt;xsl:output method=&quot;xml&quot; encoding=&quot;UTF-16&quot; /&gt;
        ///    &lt;!-- %% Global Definitions --&gt;
        ///    &lt;!-- Every single unicode character that is recognized by OMML as an operator --&gt; [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string OOML2MML {
            get {
                return ResourceManager.GetString("OOML2MML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        /// xmlns:w=&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;
        /// xmlns:pic=&quot;http://schemas.openxmlformats.org/drawingml/2006/picture&quot;
        /// xmlns:wp=&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;
        /// xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot;
        /// xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        /// xmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metad [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string oox2Daisy {
            get {
                return ResourceManager.GetString("oox2Daisy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;!--
        /// * Copyright (c) 2006, Clever Age
        /// * All rights reserved.
        /// * 
        /// * Redistribution and use in source and binary forms, with or without
        /// * modification, are permitted provided that the following conditions are met:
        /// *
        /// *     * Redistributions of source code must retain the above copyright
        /// *       notice, this list of conditions and the following disclaimer.
        /// *     * Redistributions in binary form must reproduce the above copyright
        /// *       notice, this lis [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string source {
            get {
                return ResourceManager.GetString("source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        /// xmlns:w=&quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&quot;
        /// xmlns:pic=&quot;http://schemas.openxmlformats.org/drawingml/2006/picture&quot;
        /// xmlns:wp=&quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&quot;
        /// xmlns:dcterms=&quot;http://purl.org/dc/terms/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:cp=&quot;http://schemas.openxmlformats.org/package/2006/metadata/ [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string TOC {
            get {
                return ResourceManager.GetString("TOC", resourceCulture);
            }
        }
    }
}
